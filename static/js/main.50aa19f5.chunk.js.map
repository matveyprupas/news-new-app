{"version":3,"sources":["events/events.js","components/NewsPortal/index.js","components/NewsPortal/NewsPortal.js","components/NewPreview/index.js","components/NewPreview/NewPreview.js","components/News/index.js","components/News/News.js","components/App/App.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["newsEvents","EventEmitter","NewsPortal","state","name","props","choosed","showNews","req","Request","url","fetch","then","response","json","obj","emit","cbSetChoosedPortalId","id","className","this","onClick","React","PureComponent","NewPreview","article","publishedAt","Date","publishedAtMonth","getMonth","source","getDate","getFullYear","src","urlToImage","title","description","News","newsLoaded","undefined","articles","choosedPortalId","stateNewsLoaded","map","el","i","setState","sortText","setSearchText","e","target","value","sortNews","preventDefault","stateNewsSorted","filter","toLowerCase","includes","componentDidMount","addListener","componentWillUnmount","removeListener","setChoosedPortalId","newsPortalsJSX","urlArray","sources","type","placeholder","onBlur","href","rel","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"82CAEIA,EAAW,I,KAAIC,c,eCAJC,E,4MCcbC,MAAQ,CACNC,KAAM,EAAKC,MAAMD,KACjBE,QAAS,EAAKD,MAAMC,S,EAGtBC,SAAW,WACT,IAAIC,EAAM,IAAIC,QAAQ,EAAKJ,MAAMK,KAEjCC,MAAMH,GACHI,MAAK,SAASC,GACb,OAAOA,EAASC,UAEjBF,MAAK,SAASG,GACbf,EAAWgB,KAAK,aAAcD,MAGlC,EAAKV,MAAMY,qBAAqB,EAAKZ,MAAMa,K,4CAG7C,WAKE,OACE,sBAAMC,UAAWC,KAAKf,MAAMC,QAAU,kCAAoC,cAAee,QAASD,KAAKb,SAAvG,SAAkHa,KAAKjB,MAAMC,W,GAnC1GkB,IAAMC,eCJhBC,G,kNCUbrB,MAAQ,G,4CAIR,WAGE,IAAIsB,EAAUL,KAAKf,MAAMoB,QACrBC,EAAc,IAAIC,KAAMF,EAAQC,aAChCE,EAAmB,GAEvB,OAAQF,EAAYG,WAAa,GAC/B,KAAK,EACHD,EAAmB,UACnB,MACF,KAAK,EACHA,EAAmB,WACnB,MACF,KAAK,EACHA,EAAmB,QACnB,MACF,KAAK,EACHA,EAAmB,QACnB,MACF,KAAK,EACHA,EAAmB,MACnB,MACF,KAAK,EACHA,EAAmB,OACnB,MACF,KAAK,EACHA,EAAmB,OACnB,MACF,KAAK,EACHA,EAAmB,SACnB,MACF,KAAK,EACHA,EAAmB,YACnB,MACF,KAAK,GACHA,EAAmB,UACnB,MACF,KAAK,GACHA,EAAmB,WACnB,MACF,KAAK,GACHA,EAAmB,WAMvB,OACI,sBAAKT,UAAW,cAAhB,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,+BAAOM,EAAQK,OAAO1B,OACtB,+BAAOwB,EAAmB,IAAMF,EAAYK,UAAY,KAAOL,EAAYM,qBAG/E,qBAAKC,IAAKR,EAAQS,gBAEpB,sBAAKf,UAAU,oBAAf,UACE,6BAAKM,EAAQU,QACb,qBAAKhB,UAAU,kCACf,4BAAIM,EAAQW,cACZ,uD,GAzEcd,IAAMC,gB,OCJjBc,G,kNCcblC,MAAQ,CACNmC,gBAAYC,EACZC,cAAUD,EACVE,gBAAiB,G,EAGnBlC,SAAW,SAAC+B,GAIV,IAAII,EAAkBJ,EAAWE,SAASG,KAAM,SAACC,EAAIC,GACnD,OAAO,cAAC,EAAD,CAAsBpB,QAAWmB,GAAdC,MAE5B,EAAKC,SAAU,CACbR,WAAYA,EACZE,SAAUE,EACVK,SAAU,M,EAIdC,cAAgB,SAACC,GAEf,EAAKH,SAAS,CAACC,SAAUE,EAAEC,OAAOC,S,EAGpCC,SAAW,SAACH,GACVA,EAAEI,iBACF,IAEIC,EAFa,EAAKnD,MAAMmC,WAAWE,SAASe,QAAO,SAAAX,GAAE,OAAIA,EAAGT,MAAMqB,cAAcC,SAAS,EAAKtD,MAAM4C,aAEvEJ,KAAM,SAACC,EAAIC,GAC1C,OAAO,cAAC,EAAD,CAAsBpB,QAAWmB,GAAdC,MAE5B,EAAKC,SAAU,CACbN,SAAUc,K,EAIdI,kBAAoB,WAClB1D,EAAW2D,YAAY,aAAc,EAAKpD,W,EAG5CqD,qBAAuB,WACrB5D,EAAW6D,eAAe,aAAc,EAAKtD,W,EAG/CuD,mBAAqB,SAAC5C,GACpB,EAAK4B,SAAU,CAACL,gBAAiBvB,K,4CAGnC,WAAU,IAAD,OAGH6C,EAAiBC,EAASC,QAAQtB,KAAK,SAAAC,GACzC,OAAO,cAAC,EAAD,CAA0B1B,GAAM0B,EAAG1B,GAAIZ,QAAW,EAAKH,MAAMsC,kBAAoBG,EAAG1B,GAAmBd,KAAQwC,EAAGxC,KAAMM,IAAOkC,EAAGlC,IAAKO,qBAAwB,EAAK6C,oBAAjJlB,EAAG1B,OAK/B,OACE,sBAAKC,UAAU,OAAf,UACE,6CACA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,kBAAf,SACGC,KAAKf,MAAMD,OAEd,qBAAKe,UAAY,eAAjB,SACG4C,IAEH,qBAAK5C,UAAY,eAAjB,SACE,iCACE,uBAAO+C,KAAK,OAAOC,YAAY,QAAQC,OAAQhD,KAAK4B,gBACpD,uBAAOkB,KAAK,SAASf,MAAM,SAAS9B,QAASD,KAAKgC,mBAMxDhC,KAAKjB,MAAMqC,UACX,oBAAIrB,UAAU,qBAAd,0DAEA,uBAAMA,UAAU,eAAhB,4BAA2C,mBAAGkD,KAAK,uBAAuBnB,OAAO,SAASoB,IAAI,aAAnD,gC,GAtFhChD,IAAMC,gB,MCCVgD,ICTAA,EDEf,WACE,OACE,cAAC,EAAD,CAAMpD,UAAU,MAAMf,KAAK,UEMhBoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9D,MAAK,YAAkD,IAA/C+D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.50aa19f5.chunk.js","sourcesContent":["import {EventEmitter} from 'events';\r\n\r\nlet newsEvents=new EventEmitter(); \r\n\r\nexport {newsEvents};\r\n","import NewsPortal from './NewsPortal';\r\n\r\nexport default NewsPortal;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { newsEvents } from '../../events/events';\r\n\r\nimport './NewsPortal.css';\r\n\r\nclass NewsPortal extends React.PureComponent {\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    choosed: PropTypes.bool.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    cbSetChoosedPortalId: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: this.props.name,\r\n    choosed: this.props.choosed,\r\n  };\r\n\r\n  showNews = () => {\r\n    var req = new Request(this.props.url);\r\n\r\n    fetch(req)\r\n      .then(function(response) {\r\n        return response.json();\r\n      })\r\n      .then(function(obj) {\r\n        newsEvents.emit('newsLoaded', obj);\r\n      });\r\n\r\n    this.props.cbSetChoosedPortalId(this.props.id);\r\n  };\r\n\r\n  render() {\r\n\r\n    // console.log(\"NewsPortal render\");\r\n    // console.log(this.props);\r\n\r\n    return (\r\n      <span className={this.props.choosed ? \"news-portal news-portal_choosed\" : \"news-portal\"} onClick={this.showNews}>{this.state.name}</span>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default NewsPortal;\r\n","import NewPreview from './NewPreview';\r\n\r\nexport default NewPreview;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { newsEvents } from '../../events/events';\r\n\r\nimport './NewPreview.css';\r\n\r\nclass NewsPreview extends React.PureComponent {\r\n\r\n  static propTypes = {\r\n    article: PropTypes.object.isRequired,\r\n  };\r\n\r\n  state = {\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    // console.log(\"NewsPreview render\");\r\n    let article = this.props.article;\r\n    let publishedAt = new Date (article.publishedAt);\r\n    let publishedAtMonth = \"\";\r\n\r\n    switch (publishedAt.getMonth() + 1) {\r\n      case 1:\r\n        publishedAtMonth = \"January\";\r\n        break;\r\n      case 2:\r\n        publishedAtMonth = \"February\";\r\n        break;\r\n      case 3:\r\n        publishedAtMonth = \"March\";\r\n        break;\r\n      case 4:\r\n        publishedAtMonth = \"April\";\r\n        break;\r\n      case 5:\r\n        publishedAtMonth = \"May\";\r\n        break;\r\n      case 6:\r\n        publishedAtMonth = \"June\";\r\n        break;\r\n      case 7:\r\n        publishedAtMonth = \"July\";\r\n        break;\r\n      case 8:\r\n        publishedAtMonth = \"August\";\r\n        break;\r\n      case 9:\r\n        publishedAtMonth = \"September\";\r\n        break;\r\n      case 10:\r\n        publishedAtMonth = \"October\";\r\n        break;\r\n      case 11:\r\n        publishedAtMonth = \"November\";\r\n        break;\r\n      case 12:\r\n        publishedAtMonth = \"December\";\r\n        break;\r\n  \r\n    }\r\n    // console.log(publishedAt);\r\n\r\n    return (\r\n        <div className =\"new-preview\">\r\n          <div className=\"new-preview__logo\">\r\n            <div className=\"new-preview__logo_hover\">\r\n              <div className=\"new-preview__source-info\">\r\n                <span>{article.source.name}</span>\r\n                <span>{publishedAtMonth + \" \" + publishedAt.getDate() + \", \" + publishedAt.getFullYear()}</span>\r\n              </div>\r\n            </div>\r\n            <img src={article.urlToImage}/>\r\n          </div>\r\n          <div className=\"new-preview__text\">\r\n            <h2>{article.title}</h2>\r\n            <div className=\"new-preview__underline-header\"></div>\r\n            <p>{article.description}</p>\r\n            <span>Read More</span>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default NewsPreview;\r\n","import News from './News';\r\n\r\nexport default News;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NewsPortal from '../NewsPortal';\r\nimport NewPreview from '../NewPreview';\r\nimport urlArray from '../../source/urlArray.json';\r\n\r\nimport { newsEvents } from '../../events/events';\r\n\r\nimport './News.css';\r\n\r\nclass News extends React.PureComponent {\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n  };\r\n\r\n  state = {\r\n    newsLoaded: undefined,\r\n    articles: undefined,\r\n    choosedPortalId: 0,\r\n  };\r\n\r\n  showNews = (newsLoaded) => {\r\n\r\n    // console.log(newsLoaded.articles);\r\n\r\n    let stateNewsLoaded = newsLoaded.articles.map ( (el, i) => {\r\n      return <NewPreview key = {i} article = {el}></NewPreview>\r\n    } );\r\n    this.setState( {\r\n      newsLoaded: newsLoaded,\r\n      articles: stateNewsLoaded,\r\n      sortText: '',\r\n    });\r\n  };\r\n  \r\n  setSearchText = (e) => {\r\n    // console.log(e.target.value);\r\n    this.setState({sortText: e.target.value})\r\n  }\r\n\r\n  sortNews = (e) => {\r\n    e.preventDefault();\r\n    let newsSorted = this.state.newsLoaded.articles.filter(el => el.title.toLowerCase().includes(this.state.sortText));\r\n\r\n    let stateNewsSorted = newsSorted.map ( (el, i) => {\r\n      return <NewPreview key = {i} article = {el}></NewPreview>\r\n    } );\r\n    this.setState( {\r\n      articles: stateNewsSorted,\r\n    });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    newsEvents.addListener('newsLoaded', this.showNews);\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    newsEvents.removeListener('newsLoaded', this.showNews);\r\n  };\r\n\r\n  setChoosedPortalId = (id) => {\r\n    this.setState( {choosedPortalId: id} )\r\n  };\r\n\r\n  render() {\r\n\r\n    // console.log(\"News render\");\r\n    let newsPortalsJSX = urlArray.sources.map( el => {\r\n      return <NewsPortal key = {el.id} id = {el.id} choosed = {this.state.choosedPortalId === el.id ? true : false} name = {el.name} url = {el.url} cbSetChoosedPortalId = {this.setChoosedPortalId}></NewsPortal>\r\n    } );\r\n    // console.log(newsPortalsJSX);\r\n\r\n\r\n    return (\r\n      <div className='news'>\r\n        <h1>CoolestNews</h1>\r\n        <div className=\"news__content\">\r\n          <div className=\"news__subheader\">\r\n            {this.props.name}\r\n          </div>\r\n          <div className = \"news__slider\">\r\n            {newsPortalsJSX}\r\n          </div>\r\n          <div className = \"news__search\">\r\n            <form>\r\n              <input type=\"text\" placeholder=\"Title\" onBlur={this.setSearchText}/>\r\n              <input type=\"submit\" value=\"Search\" onClick={this.sortNews}/>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        \r\n        {\r\n        this.state.articles || \r\n        <h2 className='news__without-news'>There are no articles matching tour request.</h2>\r\n        }\r\n        <span className='news__footer'>© Copyright <a href='https://newsapi.org/' target=\"_blank\" rel=\"noreferrer\">News API</a></span>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default News;\r\n","import React from 'react';\nimport News from '../News';\nimport './App.css';\n\nfunction App() {\n  return (\n    <News className=\"App\" name='News'>\n    </News>\n  );\n}\n\nexport default App;\n","import App from './App';\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}